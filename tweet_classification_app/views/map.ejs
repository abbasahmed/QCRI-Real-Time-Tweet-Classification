<% title = 'Tweet Classification' %>

<div id="myNav" class="overlay">
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
  <!-- The key is an image,so depending on the collection code we are displaying the right key -->
  <!-- You can change this so that the markers image are constant, and you just change the text boxes -->
  <% if (sails.config.myconf.collectioncode == "170826213907_hurricane_harvey_2017") { %>
  <% sails.config.myconf.image = "/harveykey.png"; %>
  <% } %>
  <% if (sails.config.myconf.collectioncode == "3345134690_Queensland_flood_2013") { %>
  <% sails.config.myconf.image = "/queenslandkey.png"; %>
  <% } %>
  <!-- Start button enables a link so that the simulator begins, next to the button the key is displayed -->
  <button onclick="if (this.value == 'Start') return Action(this);" type="buttons" value="Start" style=" margin-top: 10px; position: absolute; left: 10%; top: 40; width: 65px;" id="allbus" class="btn btn-success"> Start</button>
  <img src='<%=sails.config.myconf.image %>'style="margin-top: 10px; position: absolute; left: 36%; top: 40; width: 140px;">
  <br>
  <br>
  <br>
  <br>
  <br>
  <!-- Four categories are coded here, and it is user defined in the myconf file and is displayed here -->
  <div id="hello">
    <button class="accordion"><%=sails.config.myconf.filter1 %></button>
    <div class="overlay-content"   align="left" id="severitymaster"></div>
    <div class="slidecontainer" id="slidecontainer1">
    </div>
  </div>

  <div id="hello2">
    <button class="accordion"><%=sails.config.myconf.filter2 %></button>
    <div class="overlay-content"  align="left"  id="aidrmaster"></div>
    <div class="slidecontainer" id="slidecontainer2">
    </div>
  </div>

  <div id="hello3">
    <button class="accordion"><%=sails.config.myconf.filter3 %></button>
    <div class="overlay-content"  align="left"  id="sentimentmaster"></div>
    <div class="slidecontainer" id="slidecontainer3">
    </div>
  </div>
  <div id="hello4">
    <button class="accordion"><%=sails.config.myconf.filter4 %></button>
    <div class="overlay-content"  align="left"  id="imagemaster"></div>
  </div>

</div>



<script>


  // connecting to socket.io to get data from sim

  var outer=io.sails.connect();
  var inner=io.sails.connect();

  var collection_code = '<%=respose[0]%>';
  var query_code = '';


  //Accrodian are the collapsable and expandable categories in green

  var acc = document.getElementsByClassName("accordion");
  var i;

  for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
      this.classList.toggle("active");
      var panel = this.nextElementSibling;
      if (panel.style.display === "block") {
        panel.style.display = "none";
      } else {
        panel.style.display = "block";
      }
    });
  }

// Start button enables the simulator

var windoww= "";

function Action(el) {

  my_window = window.open('http://localhost:1337/sim/add','','width=,height=,resizable=no');
  windoww=my_window;
  my_window.focus();

  if ( el.value === "Start" )
    el.value = "Stop";
  else
    el.value = "Start";

}
</script>

<!-- This displays the map -->
<div id="map">

 <br>
 <br>
 <br>
 <br>

 <div class="btn-group" style="z-index: 401"> <!-- Use 401 to be between map and controls-->
  <!-- This is the three lines that opens the filters -->
  <span  id="SpanHeader" class="CourseHeader"  onclick="openNav()">&#9776; &nbsp </span>
  <!-- Click me image next to it -->
  <img src="/click.png" id="SpanHeader2" class="CourseHeader2" >
</div>



</div>

<!-- This takes the labels from the database which have underscores and removes them, and capitalizes the first character -->
<script>
  String.prototype.replaceAt=function(index, replacement) {
    return this.substr(0, index) + replacement+ this.slice(index+1)
  }
  function removeunwanted(age) {
    age=age.charAt(0).toUpperCase()+age.slice(1);
    for(i=0;i<age.length;i++){
      if(age.charAt(i)=='_'){
       age=age.replaceAt(i, " ")
       if(!(age.substring(i+1,i+4)=="and" || age.substring(i+1,i+3)=="or")){
         age=age.substring(0,i+1)+age.charAt(i+1).toUpperCase()+age.slice(i+2);

       }
     }
   }
   return age;
 }
// open the navigation bar
function openNav() {
  $("#SpanHeader").toggleClass("Black");
  $("#SpanHeader2").toggleClass("Black");
  document.getElementById("myNav").style.width = "30%";

}
// close the navigation bar
function closeNav() {
  $("#SpanHeader").removeClass("Black");
  $("#SpanHeader2").toggleClass("Black");
  document.getElementById("myNav").style.width = "0%";
}
     // this is required for the map to be displayed
     var mbAttr = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
     '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
     'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
     mbUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
  // street and satellite view from mapbox
  var streets  = L.tileLayer(mbUrl, {id: 'mapbox.streets',   attribution: mbAttr}),
  satellite  = L.tileLayer(mbUrl, {id: 'mapbox.streets-satellite',   attribution: mbAttr});
    // layergroup is a constrctor for storing the markers
//var markerGroup = L.layerGroup();


var mcg = L.markerClusterGroup();

 // setting the map with different properties + different layers
 var map = L.map( 'map', {
  center: [20.0, 5.0],
  minZoom: 2,
  zoom: 2,
  layers: [streets, mcg],
  worldCopyJump: true,
});


 L.tileLayer( 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
  subdomains: ['a', 'b', 'c'],
}).addTo( map );
 var baseLayers = {
  "Streets": streets,
  "Satellite": satellite
};
var overlays = {
  "Markers": mcg
};
L.control.layers(baseLayers, overlays).addTo(map);






  // Green  marker
  var myIcon = L.ExtraMarkers.icon({
    icon: 'fa-circle-o',
    iconShape: 'circle',
    markerColor: 'green',
    prefix: 'fa'
  });

  // Yellow color marker
  var myIcon2 = L.ExtraMarkers.icon({
    icon: 'fa-circle-o',
    iconShape: 'circle',
    markerColor: 'yellow',
    prefix: 'fa'
  });
  // Red color marker
  var myIcon3 = L.ExtraMarkers.icon({
    icon: 'fa-circle-o',
    iconShape: 'circle',
    markerColor: 'red',
    prefix: 'fa'
  });






  function get1(qu,flag){

    outer.get(qu, function (resData, jwres){
      mcg.clearLayers();
      map.addLayer(mcg);
      for(let j=0; j<resData.sim.length; j++){

        let lati= resData.sim[j].latitude;
        let long= resData.sim[j].longitude;
        let text1= resData.sim[j].tweet_text;
        let img= resData.sim[j].image_physical_location;
        let aidr= resData.sim[j].aidr_class_label;
        let sentiment= resData.sim[j].sentiment;
        let severity= resData.sim[j].image_damage_class;
  // this takes the url part fo tweet text and makes it a hyperlink
  function linkify(text) {
   var urlRegex =/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
   return text.replace(urlRegex, function(url) {
     return '<a href="' + url + '" target="' + '_blank' + '"">' + url + '</a>'
   });
 }
 var a=linkify(text1);
 var senti='';
 var aid='';
 aid=removeunwanted(aidr);
// in the database, the records that are null for severity, we set it to unknown, and those which say None we set it to Zero
if(severity== ''){
  severity="Unkown";
}
if(severity== 'None'){
  severity="Zero";
}

var popup = L.popup();
// popoup for markers with an image
function onMapClick() {
  popup
  .setLatLng([long, lati])
  .setContent('<p>' + a + '</p>' + "<a target='" + '_blank' + "' href='" +  img  + "'><img class='size'  src='" + img  + "'/></a>" + '<p>' +'<b>' + "<%= sails.config.myconf.displayaidr %>" +'</b>'+ aid+ '</p>'+ '<p>' +'<b>'+ "<%= sails.config.myconf.displaysentiment %>" +'</b>'+  sentiment  + '</p>'+'<p>' +'<b>'+ "<%= sails.config.myconf.displayseverity %>" +'</b>'+  severity  + '</p>')
  .addTo(map);
}
// popoup for markers without an image
function onMapClick2() {
  popup
  .setLatLng([long, lati])
  .setContent('<p>' + a + '</p>'  + '<p>' +'<b>'+ "<%= sails.config.myconf.displayaidr %>" +'</b>'+ aid+ '</p>'+ '<p>' +'<b>'+ "<%= sails.config.myconf.displaysentiment %>" +'</b>'+  sentiment  + '</p>'+'<p>' +'<b>'+ "<%= sails.config.myconf.displayseverity %>" +'</b>'+  severity  + '</p>')
  .addTo(map);
}
// for each severity there are two cases- with and without image. Here we are just creating the marker and adding it to a markerGroup
if (severity== ('None')){
 if(img==''){
  little = new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little.on('click', onMapClick2);

}
else{
  little1 = new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little1.on('click', onMapClick);

}
}
else if (severity=='Mild') {
  if(img==''){
    little2 = new L.marker([long,lati], {icon: myIcon2} ).addTo(mcg);
    little2.on('click', onMapClick2);

  }
  else{
    little3 = new L.marker([long,lati], {icon: myIcon2} ).addTo(mcg);
    little3.on('click', onMapClick);

  }
}
else if (severity=='Severe') {
 if( img==''){
  little4 = new L.marker([long,lati], {icon: myIcon3} ).addTo(mcg);
  little4.on('click', onMapClick2);
}
else{

  little5= new L.marker([long,lati], {icon: myIcon3} ).addTo(mcg);
  little5.on('click', onMapClick);
}
}
else if (severity=='Minor') {
 if( img==''){
  little41 = new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little41.on('click', onMapClick2);
}
else{

  little51= new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little51.on('click', onMapClick);
}
}
else if (severity=='Moderate') {
 if( img==''){
  little42 = new L.marker([long,lati], {icon: myIcon2} ).addTo(mcg);
  little42.on('click', onMapClick2);
}
else{

  little52= new L.marker([long,lati], {icon: myIcon2} ).addTo(mcg);
  little52.on('click', onMapClick);
}
}
else if (severity=='Major') {
 if( img==''){
  little43 = new L.marker([long,lati], {icon: myIcon3} ).addTo(mcg);
  little43.on('click', onMapClick2);
}
else{

  little53= new L.marker([long,lati], {icon: myIcon3} ).addTo(mcg);
  little53.on('click', onMapClick);
}
}
else {
 if(img==''){
  little6 = new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little6.on('click', onMapClick2);

}
else{
  little7 = new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little7.on('click', onMapClick);

}
}
}
 // this is to ensure the querying is done for new markers only
 if(resData.sim.length!=0){
  let createtime1=resData.sim[0].createtime;
  let vep=query_code;
  var n = vep.indexOf("q8");
  var res = vep.replace(vep.substring(n+3), createtime1);
  query_code = res;
}
if(flag==0){
 setInterval(

  function(){
    inner.get(query_code, function (resData1, jwres){
      for(let i=0;i<resData1.sim.length; i++){
        let latii= resData1.sim[i].latitude
        let longi= resData1.sim[i].longitude
        let text1i= resData1.sim[i].tweet_text
        let imgi= resData1.sim[i].image_physical_location
        let aidri= resData1.sim[i].aidr_class_label
        let sentimenti= resData1.sim[i].sentiment
        let severityi= resData1.sim[i].image_damage_class
        let txt1= text1i;
            // same as linkify function
            function linkify1(text) {
             var urlRegex =/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
             return text.replace(urlRegex, function(url) {
               return '<a href="' + url + '" target="' + '_blank' + '"">' + url + '</a>';
             });
           }
           let ai=linkify1(txt1);
           let sentii='';
           let aidi='';
           aidi=removeunwanted(aidri);
           var popup1 = L.popup();
// same as onMapClick function
function onMapClick1() {
  popup1
  .setLatLng([longi, latii])
  .setContent('<p>' + ai + '</p>' + "<a target='" + '_blank' + "' href='" +  imgi  + "'><img class='size'  src='" + imgi  + "'/></a>" + '<p>' +'<b>'+ "<%= sails.config.myconf.displayaidr %>" +'</b>'+ aidi+ '</p>'+ '<p>' +'<b>'+ "<%= sails.config.myconf.displaysentiment %>" +'</b>'+  sentimenti  + '</p>'+'<p>' +'<b>'+ "<%= sails.config.myconf.displayseverity %>" +'</b>'+  severityi  + '</p>')
  .addTo(map);
}
// same as onMapClick2 function
function onMapClick21() {
  popup1
  .setLatLng([longi, latii])
  .setContent('<p>' + ai + '</p>'  + '<p>' +'<b>'+  "<%= sails.config.myconf.displayaidr %>" +'</b>' + aidi+ '</p>'+ '<p>' +'<b>'+ "<%= sails.config.myconf.displaysentiment %>" +'</b>'+  sentimenti  + '</p>'+'<p>' +'<b>'+ "<%= sails.config.myconf.displayseverity %>" +'</b>'+  severityi  + '</p>')
  .addTo(map);
}
// same process here with markeres created for image and without image
if (severityi== ('None')){
 if(imgi==''){
  littlei = new L.marker([longi,latii], {icon: myIcon} ).addTo(mcg);
  littlei.on('click', onMapClick21);

}
else{
  little1i = new L.marker([longi,latii], {icon: myIcon} ).addTo(mcg);
  little1i.on('click', onMapClick1);

}
}
else if (severityi=='Mild') {
  if(imgi==''){
    little2i = new L.marker([longi,latii], {icon: myIcon2} ).addTo(mcg);
    little2i.on('click', onMapClick21);

  }
  else{
    little3i = new L.marker([longi,latii], {icon: myIcon2} ).addTo(mcg);
    little3i.on('click', onMapClick1);

  }
}
else if (severityi=='Severe') {
 if( imgi==''){
  little4i = new L.marker([longi,latii], {icon: myIcon3} ).addTo(mcg);
  little4i.on('click', onMapClick21);
}
else{

  little5i= new L.marker([longi,latii], {icon: myIcon3} ).addTo(mcg);
  little5i.on('click', onMapClick1);
}
}
else if (severity=='Minor') {
 if( img==''){
  little41 = new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little41.on('click', onMapClick2);
}
else{

  little51= new L.marker([long,lati], {icon: myIcon} ).addTo(mcg);
  little51.on('click', onMapClick);
}
}
else if (severity=='Moderate') {
 if( img==''){
  little42 = new L.marker([long,lati], {icon: myIcon2} ).addTo(mcg);
  little42.on('click', onMapClick2);
}
else{

  little52= new L.marker([long,lati], {icon: myIcon2} ).addTo(mcg);
  little52.on('click', onMapClick);
}
}
else if (severity=='Major') {
 if( img==''){
  little43 = new L.marker([long,lati], {icon: myIcon3} ).addTo(mcg);
  little43.on('click', onMapClick2);
}
else{

  little53= new L.marker([long,lati], {icon: myIcon3} ).addTo(mcg);
  little53.on('click', onMapClick);
}
}
else {
 if(imgi==''){
  little6i = new L.marker([longi,latii], {icon: myIcon} ).addTo(mcg);
  little6i.on('click', onMapClick21);

}
else{
  little7i = new L.marker([longi,latii], {icon: myIcon} ).addTo(mcg);
  little7i.on('click', onMapClick1);

}
}
}
// ensure querying is done on new markers onle
if(resData1.sim.length!=0){
  let createtime2=resData1.sim[0].createtime;
  let vep1=query_code;
  var n1 = vep1.indexOf("q8");
  var res1 = vep1.replace(vep1.substring(n1+3), createtime2);
  query_code = res1;
}
});
},5000);
  // every 5 seconds the realtime aspect is done (e.g. refresh page 5 seconds wihtout any blinking)
}
});

}

function dyrender(s1,s2,s3){
  var num = document.getElementById(s1);
  var td = document.createElement('td');
  var tr=document.createElement('tr');
  var h4=document.createElement('h4');
  var div=document.createElement('div');
  div.id=s2;
  var txt=document.createTextNode(s3);
  h4.appendChild(txt);
  td.appendChild(h4);
  tr.appendChild(td);
  num.appendChild(tr);
  td=document.createElement('td');
  tr=document.createElement('tr');
  td.appendChild(div);
  tr.appendChild(td);
  num.appendChild(tr);
  td=document.createElement('td');
  tr=document.createElement('tr');
  td.appendChild(document.createTextNode( '\u00A0' ));
  tr.appendChild(td);
  num.appendChild(tr);
}
</script>




<% if(respose[respose.length-1]!=0){%>
<div>

  <% if(respose[1]!=0){%>
  <div id="something1" hidden='true'>
    <%= respose[1] %>
  </div>

  <!-- severitymaster is the id of the div tag under the Severity category button.-->
  <script>
    dyrender('severitymaster','severity', '');
  </script>
  <% for(var i=2; i<(respose[1])+2; i++){ %>
  <!-- Creating the checkboxes and labels dynamically for severity -->
  <script>
    var slc1=document.getElementById('severity');
    var ele='<%=respose[i]%>';
    var checkbox = document.createElement("input");
    checkbox.type = "checkbox";
    checkbox.align= "left";
    checkbox.className ="severity";
    checkbox.value =ele;
    slc1.appendChild(checkbox);
    var label = document.createElement('label')
    label.htmlFor = ele;
    label.align="left";
    label.setAttribute( 'style', 'color:#000000;');
    var te=ele;
            // if there is no severity, do not display anything
            if(ele=="null" && document.getElementById("something1").innerText == 1){
              te="";
              checkbox.style.display = 'none';
              var x= document.getElementById("hello");
              x.innerHTML = "";
            }

            if(ele=='null'){
              te='Unknown';
            }
            else if(ele=='None'){
              te='Zero';
            }
            else if(ele=='Severe'){
              te='High';
            }
            label.appendChild(document.createTextNode(te+' '+'Severity'));
            slc1.appendChild(label);
            slc1.appendChild(document.createElement("br"));
            checkbox.setAttribute("onClick","task(event);");
          </script>
          <%}%>
          <script>
            var slid1= document.getElementById('slidecontainer1');
            var slid1in=document.createElement('input');
            slid1in.type="range"
            slid1in.className="slider";
            slid1in.id="myRange";
            slid1in.min="0";
            slid1in.max="1";
            slid1in.step="0.0001";
            slid1in.value="0"
            var slid1inp=document.createElement('p');
            slid1inp.className="paralign";
            var slid1inspan=document.createElement('span');
            slid1inspan.className="smallbutton";
            slid1inspan.id="demon";
            slid1inp.appendChild(slid1inspan);
            slid1.appendChild(slid1in);
            slid1.appendChild(slid1inp);
          </script>
          <%}%>
          <% if(respose[i]!=0){%>
          <div id="something2" hidden='true'>
            <%= respose[i] %>
          </div>
          <!-- aidrmaster is the id of the div tag under the AIDR Label category button.-->
          <script >
            dyrender('aidrmaster','aidr', '');
          </script>

          <% for(var j=i+1; j<(respose[i])+i+1; j++){ %>
          <!-- Creating the checkboxes and labels dynamically for aidr-->
          <script>
            var slc2=document.getElementById('aidr');
            var ele='<%=respose[j]%>';
            var check = ele.charAt(0).toUpperCase() + ele.slice(1);
            var checkbox = document.createElement("input");
            checkbox.type = "checkbox";
            checkbox.className ="aidr";
            checkbox.value =ele;
            slc2.appendChild(checkbox);
            var label = document.createElement('label')
            label.setAttribute( 'style', 'color:#000000;');
            label.htmlFor = ele;
                  // if there is no aidr, do not display anything
                  if(ele=="null" && document.getElementById("something2").innerText == 1){
                   checkbox.style.display = 'none';
                   var x= document.getElementById("hello2");
                   x.innerHTML = "";
                 }
                 label.appendChild(document.createTextNode(check.replace(/_/g,' ')));
                 slc2.appendChild(label);
                 slc2.appendChild(document.createElement("br"));
                 checkbox.setAttribute("onClick","task(event);");
               </script>
               <%}%>
               <script>
                var slid2= document.getElementById('slidecontainer2');
                var slid2in=document.createElement('input');
                slid2in.type="range"
                slid2in.className="slider";
                slid2in.id="myRange1";
                slid2in.min="0";
                slid2in.max="1";
                slid2in.step="0.0001";
                slid2in.value="0"
                var slid2inp=document.createElement('p');
                slid2inp.className="paralign";
                var slid2inspan=document.createElement('span');
                slid2inspan.className="smallbutton";
                slid2inspan.id="demon1";
                slid2inp.appendChild(slid2inspan);
                slid2.appendChild(slid2in);
                slid2.appendChild(slid2inp);
              </script>
              <%}%>
              <% if(respose[j]!=0){%>
              <div id="something3" hidden='true'>
                <%= respose[j] %>
              </div>
              <!-- sentimentmaster is the id of the div tag under the Sentiment category button.-->
              <script>
               dyrender('sentimentmaster','sentiment','');
             </script>
             <% for(var k=j+1; k<(respose[j])+j+1; k++){ %>
             <!-- Creating the checkboxes and labels dynamically for sentiment -->
             <script>
              var slc3=document.getElementById('sentiment');
              var ele='<%=respose[k]%>';
              var checkbox = document.createElement("input");
              checkbox.type = "checkbox";
              checkbox.className ="sentiment";
              checkbox.value =ele;
              slc3.appendChild(checkbox);
              var label = document.createElement('label')
              label.htmlFor = ele;
              label.setAttribute( 'style', 'color:#000000;');
              te=ele;
                 // if there is no aidr, do not display anything
                 if(ele=="null" && document.getElementById("something3").innerText == 1){
                  te="";
                  checkbox.style.display = 'none';
                  var x= document.getElementById("hello3");
                  x.innerHTML = "";
                }
                label.appendChild(document.createTextNode(te));
                slc3.appendChild(label);
                slc3.appendChild(document.createElement("br"));
                checkbox.setAttribute("onClick","task(event);");
              </script>
              <%}%>
              <script>
                var slid3= document.getElementById('slidecontainer3');
                var slid3in=document.createElement('input');
                slid3in.type="range"
                slid3in.className="slider";
                slid3in.id="myRange2";
                slid3in.min="0";
                slid3in.max="1";
                slid3in.step="0.0001";
                slid3in.value="0"
                var slid3inp=document.createElement('p');
                slid3inp.className="paralign";
                var slid3inspan=document.createElement('span');
                slid3inspan.className="smallbutton";
                slid3inspan.id="demon2";
                slid3inp.appendChild(slid3inspan);
                slid3.appendChild(slid3in);
                slid3.appendChild(slid3inp);
              </script>
              <%}%>


              <% if(respose[k]!=0){ %>
              <div id="something4" hidden='true'>
                <%= respose[k] %>
              </div>
              <!-- imagemaster is the id of the div tag under the Image category button.-->
              <script>
               dyrender('imagemaster','image','');
             </script>
             <% for(var l1=k+1; l1<(respose[k])+k+1; l1++){ %>
             <!-- Creating the checkboxes and labels dynamically for sentiment -->
             <script>
              var slc4=document.getElementById("image");
              var ele='<%=respose[l1]%>';
              var check = ele.charAt(0).toUpperCase() + ele.slice(1);
              var checkbox = document.createElement("input");
              checkbox.type = "checkbox";
              checkbox.className ="image";
              checkbox.value =ele;
              slc4.appendChild(checkbox);
              var label = document.createElement('label')
              label.htmlFor = ele;
              label.setAttribute( 'style', 'color:#000000;');
              label.appendChild(document.createTextNode(check));
              slc4.appendChild(label);
              slc4.appendChild(document.createElement("br"));
              checkbox.setAttribute("onClick","task(event);");
            </script>
            <%}%>
            <% }%>
            <%}%>
            <!-- Slider  -->
            <script>
              var slider = document.getElementById("myRange");
              var output = document.getElementById("demon");
              output.innerHTML = slider.value;
              slider.oninput = function() {
               output.innerHTML = this.value;
             }
             slider.onmouseup=function(){
               task(event);
             }
             var slider1 = document.getElementById("myRange1");
             var output1 = document.getElementById("demon1");
             output1.innerHTML = slider1.value;
             slider1.oninput = function() {
               output1.innerHTML = this.value;
             }
             slider1.onmouseup=function(){
               task(event);
             }
             var slider2 = document.getElementById("myRange2");
             var output2 = document.getElementById("demon2");
             output2.innerHTML = slider2.value;
             slider2.oninput = function() {
               output2.innerHTML = this.value;
             }
             slider2.onmouseup=function(){
               task(event);
             }
           </script>
           <!-- For aidr, sentiment and image damage class, we find which checboxes are checked so that we can query appropriately -->
           <!-- These are stored in str, str2, str3 -->
           <!-- Then an appropriate query is written - query1, query2 and query3 -->
           <!-- for image, query4 is written directly -->
           <script>
             function task(e){
              console
              var checks = document.getElementsByClassName('severity');
              var str = '';
              if ( '<%=sails.config.myconf.displayseverity %>'== "Severity: "|| '<%=sails.config.myconf.displayseverity %>'== " "){
                for ( i = 0; i < document.getElementById("something1").innerText; i++) {

                  if ( checks[i].checked === true) {
                    str += checks[i].value + " ";
                  }

                }
              }
              if(str!=''){
                str=str.trim();
                str= str.split(' ');
              }
              var checks2 = document.getElementsByClassName('aidr');
              var str2 = '';
              if ( '<%=sails.config.myconf.displayaidr %>'== "Humanitarian Category: "|| '<%=sails.config.myconf.displayaidr %>'== " "){
                for ( j = 0; j < document.getElementById("something2").innerText; j++) {
                 if ( checks2[j].checked === true ) {
                  str2 += checks2[j].value + " ";
                }

              }
            }
            if(str2!=''){
              str2=str2.trim();
              str2= str2.split(' ');
            }
            var checks3 = document.getElementsByClassName('sentiment');
            var str3 = '';
            if ( '<%=sails.config.myconf.displaysentiment %>'== "Sentiment: "|| '<%=sails.config.myconf.displaysentiment %>'== " "){
              for ( k = 0; k < document.getElementById("something3").innerText; k++) {

                if ( checks3[k].checked === true ) {
                  str3 += checks3[k].value + " ";
                }
              }
            }
            if(str3!=''){
              str3=str3.trim();
              str3= str3.split(' ');
            }
            query4='';
            var checks4 = document.getElementsByClassName('image');
            if(checks4[0].checked==true && checks4[1].checked==false ){
              query4="no";
            }
            else if(checks4[1].checked==true && checks4[0].checked==false){
              query4="yes";
            }
            else if(checks4[1].checked==true && checks4[0].checked==true){
              query4="both1";
            }
            else if(checks4[1].checked==false && checks4[0].checked==false){
              query4="both2";
            }
            var idc={'null':false,'None':false,'Mild':false,'Severe':false};
            query='';
            query1='';
            query2='';
            query3='';
            for ( l = 0; l < str.length; l++) {
              if(str[l]=="null"){
                idc[str[l]]=true;
                query += '{image_damage_class:'+ '\"'+'\"'+'}';
                query1+= '{image_damage_class:'+ '\"'+'\"'+'}';
              }
              else{
                idc[str[l]]=true;
                query += '{image_damage_class:'+ '\"'+str[l] + '\"'+'}';
                query1 += '{image_damage_class:'+ '\"'+str[l] + '\"'+'}';
              }
            }
            for ( m = 0; m < str2.length; m++) {
              query += '{aidr_class_label:' + '\"'+str2[m] + '\"'+'}';
              query2 += '{aidr_class_label:' + '\"'+str2[m] + '\"'+'}';
            }
            var sen={'Positive':false,'Negative':false,'Neutral':false};
            for ( n = 0; n < str3.length; n++) {
              query += '{sentiment:'+'\"'+ str3[n] + '\"'+'}';
              query3 += '{sentiment:'+'\"'+ str3[n] + '\"'+'}';
            }

// Then all the querying are combined and sent to the controller.
// Remember: Across different categories it is an "AND" cosntion, and within a category it is an "OR" condition
var qu='/tweets/filteror?q1='+query1+'&q2='+query2+'&q3='+query3+'&q4='+query4+'&q5='+0+'&q7='+0+'&q9='+collection_code+'&q10='+document.getElementById("demon").innerHTML+'&q11='+document.getElementById("demon1").innerHTML+'&q12='+document.getElementById("demon2").innerHTML+'&q8='+'xyz';
query_code = '/tweets/filteror?q1='+query1+'&q2='+query2+'&q3='+query3+'&q4='+query4+'&q5='+1+'&q7='+1+'&q9='+collection_code+'&q10='+document.getElementById("demon").innerHTML+'&q11='+document.getElementById("demon1").innerHTML+'&q12='+document.getElementById("demon2").innerHTML+'&q8='+'xyz';
get1(qu,0);
}
</script>
<!-- Load the slider  -->
<script>
  window.onload = function() {
    get1('/tweets/filteror?q1='+''+'&q2='+''+'&q3='+''+'&q4='+''+'&q5='+0+'&q7='+0+'&q9='+collection_code+'&q10='+document.getElementById("demon").innerHTML+'&q11='+document.getElementById("demon1").innerHTML+'&q12='+document.getElementById("demon2").innerHTML+'&q8='+'xyz',1);
  }
</script>

</div>
